<%# -*- coding: utf-8 %>

<%# 必要なライブラリの読み込み %>
<% require 'rubygems' %>
<% require 'dbi' %>
<% require 'time' %>

<%# 学習者の本日の合計時間を入れる配列 %>
<% sumarray = Array.new() %>

<%# データベース接続 %>
<% dbh = DBI.connect('DBI:SQLite3:research_log.db') %>

<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
  <title>美馬研究室 研究記録</title>

  <script src="https://code.jquery.com/jquery-1.10.2.min.js" type="text/javascript" language="javascript"></script>
  <script src="https://code.jquery.com/ui/1.10.4/jquery-ui.min.js" type="text/javascript" language="javascript"></script>
  <link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css" />

  <script type="text/javascript" src="jq.schedule.js"></script> 
  <link rel="stylesheet" type="text/css" href="style.css" />

  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet" >
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/2.3.2/js/bootstrap.min.js"></script>

</head>
<body>
  

  <!-- ナビゲーション -->
  <nav class="navbar navbar-inverse" role="navigation">
    <div class="container">

        <!-- ナビゲーションヘッダー -->
        <div class="navbar-header">

          <!-- スマホサイズになった時のボタンの設定 -->
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand text-info" href="index.erb">美馬研究室　研究記録</a>

        </div>

        <!-- ナビゲーションの内容 -->
        <div class="navbar-collapse collapse">
          <ul class="nav navbar-nav">
            <li><a href="index.erb">ホーム</a></li>
            <li><a href="log.html">記録する</a></li>
            <li><a href="personal.erb">勉強ログ</a></li>
          </ul>
        </div>

    </div>
  </nav>



  <!-- メインコンテンツ  -->
  <div class="container" style="padding: 20px 0">

    <!-- ユーザ情報 -->
    <!-- グリッドシステムを使用する -->
    <div class="row">

      <div class="col-sm-8">
        <div class="panel panel-default" style="padding-left: 20px">
          <div class="media">
            <!-- pull-right にすると、画像が右端に表示される -->
            <img class="media-object pull-left" src="images/takuma.jpg" style="margin: 10px" width="100" height="100" class="img-responsive" >
            <div class="media-body" >
              <h4 class="media-heading" style="margin-top: 10px"> 佐々木 拓真 </h4>
              佐々木です。サイトの作成者でもあります。<br>
              勉強がんばります。
            </div>
          </div>
        </div>
      </div>

    </div>


    <div class="panel panel-default">
      <table class="table table-bordered">
        <thead>
          <tr><th>学習のタイムライン</th></tr>
        </thead>
        <tbody>
          <tr>
            <td>
              <div style="padding: 10px">
                <!-- 学習時間のタイムライン -->
                <div id="schedule"></div>
              </div>
            </td>
          </tr>
        </tbody>
      </table>
    </div>

      <!-- 記録のグラフ -->
      <form>
        <div class="panel panel-default">
          <table class="table table-bordered">
            <thead>
              <tr><th><span id="graph_date"></span>の勉強状況</th></tr>
            </thead>
            <tbody>
              <tr>
                <td>

                  <!-- みんなの学習時間グラフ -->
                  <p>
                    <h4><span class="label label-default">美馬研生の学習時間</span></h4><br>
                    <canvas id="chart1" style=" width: 100% !important; max-width: 500px; height: auto !important;">
                    </canvas>
                  </p>

                  <hr>

                  <!-- みんなの学習カテゴリグラフ -->
                  <p>
                    <h4><span class="label label-default">美馬研生の学習カテゴリ</span></h4><br>
                    <canvas id="chart2" style=" width: 100% !important; max-width: 500px; height: auto !important;">
                    </canvas>
                    <div id="pieLegend" ></div>
                  </p>

                  <hr>

                  <!-- みんなの学習スタイルグラフ -->
                  <p>
                    <h4><span class="label label-default">美馬研生の学習スタイル</span></h4><br>
                    <canvas id="chart3" style=" width: 100% !important; max-width: 500px; height: auto !important;">
                    </canvas>
                  </p>

              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </form>

    <!-- タイムライン表示機能 -->
    <div class="panel panel-default">
      <table class="table table-bordered">
        <thead>
          <tr><th>タイムライン</th></tr>
        </thead>
        <tbody>
          <tr>
            <td>
              <ul>

<%# コメントとuser_idをデータベースから逆順で取り出す %>
<% sth_comment = dbh.execute("select comment, user_id from tasks order by task_id desc;") %>
<% sth_comment.first(10).each do |row_comment| %>
  <% sth_image = dbh.select_one("select user_name, image_name from users where user_id = #{row_comment["user_id"]};") %>
                <li class="media">
                  <!-- pull-right にすると、画像が右端に表示される -->
                  <a class="pull-left" href="#">
                    <img class="media-object" src="images/<%= "#{sth_image["image_name"]}" %>" alt="写真" width="150" height="150" class="img-responsive" >
                  </a>
                  <div class="media-body">
                    <h4 class="media-heading"> <%= "#{sth_image["user_name"]}".force_encoding("utf-8") %> </h4>
                    <%= "#{row_comment["comment"]}".force_encoding("utf-8") %>
                  </div>
                </li>

                <hr>

<% end %>

              </ul>

            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>


  <!-- footer -->
  <footer class="footer" style="height: 40px; background-color: #000000;">
    <div class="container" >
      <p class="text-muted" style="padding: 5px;">Copyright (C) 2015 Takuma Sasaki ALL Right Reserved.</p>
    </div>
  </footer>


  <!-- javascriptの読み込み -->
  <script src="https://code.jquery.com/jquery-1.10.2.min.js" type="text/javascript" language="javascript"></script>
  <script src="https://code.jquery.com/ui/1.10.4/jquery-ui.min.js" type="text/javascript" language="javascript"></script>
  <script src="js/bootstrap.min.js"></script>

  
  <!-- ライブラリ -->
  <script src="datetimepicker/jquery.datetimepicker.js"></script>
  <script src="http://momentjs.com/downloads/moment.js"></script>
  <script src="js/Chart.js"></script>
  <script type="text/javascript" src="jq.schedule.js"></script>


  <!-- 自分で書いたスクリプト -->
  <script src="js/current_time.js"></script>
  <script>

  // 現在の日付を取得
  var m = moment();
  var date = m.format("YYYY年MM月DD日");

  // 様々な処理をまとめた
  $(function (){

    // 現在の日付を表示するメソッド
    current_time(date);

    // 勉強のタイムライン
    $("#schedule").timeSchedule({
        startTime: "03:00", // schedule start time(HH:ii)
        endTime: "23:00",   // schedule end time(HH:ii)
        widthTime:600,      // cell timestamp
        timeLineY:60,       // height(px)
        verticalScrollbar:20,   // scrollbar (px)
        timeLineBorder:2,   // border(top and bottom)
        debug:"#debug",     // debug string output elements
        rows : {
            '1' : {
                title : m.format("YYYY年MM月DD日"),
                schedule:[
<%  sth_timeline = dbh.execute("select * from tasks where date('now', 'localtime') between date(start_time) and date(finish_time) and user_id = 2;") %>
<%  sth_timeline.each do |row_timeline| %>

                    {
                        <% start_time = Time.parse(row_timeline['start_time']) %>
                        <% finish_time = Time.parse(row_timeline['finish_time']) %>
                        start:'<%= "#{start_time.strftime("%H:%M")}".force_encoding("utf-8") %>',
                        end:'<%= "#{finish_time.strftime("%H:%M")}".force_encoding("utf-8") %>',
                        text:'<%= "#{row_timeline['task_name']}".force_encoding("utf-8") %>',
                        data:{
                        }
                    },
                    
<%  end %>
                    
                ]
            },
        },
        
        click: function(node,data){
            alert("click event");
        },
                time_click: function(time,data){
            alert("time click event");
        },
    });


    // 棒グラフを描画する処理
    var ctx1 = $("#chart1").get(0).getContext("2d");

    // 棒グラフのデータ
    var data1 = {
      // X軸のラベル
      labels : [

<% # ユーザ名をデータベースから取り出す %>
<% sth_name_second = dbh.execute("select user_name from users;") %>
<% sth_name_second.each do |row_name_second| %>

            "<%= "#{row_name_second["user_name"]}".force_encoding("utf-8") %>",

<% end %>

        ],
      datasets : [
          {
            // グラフの描画設定
            fillColor   : [
              "rgba(131,170,206,0.5)",
              "rgba(131,100,100,0.5)",
              "rgba(110,185,255,0.5)",
              "rgba(131,185,86,0.5)",
              "rgba(246,133,124,0.5)",
              "rgba(246,133,124,0.5)",
              "rgba(206,195,73,0.5)"
            ],
            strokeColor : [
              "rgba(131,185,206,1)",
              "rgba(131,185,206,1)",
              "rgba(131,185,206,1)",
              "rgba(131,185,206,1)",
              "rgba(246,133,124,1)",
              "rgba(246,133,124,1)",
              "rgba(206,195,73,1)"
            ],
            pointColor : "#00bfff", //点の色・透明度
            pointStrokeColor : "#fff",//点の周りの色
            data : [


<% # 各ユーザの本日の学習時間の合計を表示する処理  %>
<% sth_name_third = dbh.execute("select user_id from users;") %>
<% sth_name_third.each do |row_name_third| %>

<%    # 各ユーザの本日の学習時間の合計 %>
<%    sum = 0 %>
<%    study_hours = dbh.execute("select (strftime('%s', tasks.finish_time) - strftime('%s', tasks.start_time)) / 60 from tasks where date('now', 'localtime') between date(start_time) and date(finish_time) and user_id = #{row_name_third["user_id"]};") %>
<%    study_hours.each do |row| %>

<%       sum = sum + row[0].to_i %>

<%    end %>
<%#   デバック %>
<%    puts sum %>
<%    sumarray.push(sum) %>
<%=   sum %>,
<%    study_hours.finish %>
<% end %>

            ]
          }
        ]
      };

      // 棒グラフの設定
      var option1 = {

        // 値の開始値などを自分で設定するか
        scaleOverride : true,

        // y軸の値のステップ数
        scaleSteps : 3,

        // y軸のステップする大きさ
        scaleStepWidth : <%= sumarray.max / 2 %>,

        // Y軸の値の始まりの値
        scaleStartValue : 0,

        // ラベルの表示 ( Y 軸の値 )
        scaleShowLabels : true,
        
        scaleFontFamily : "'Arial'",
        // X, Y 軸値のフォントサイズ
        scaleFontSize : 12,
        // X, Y 軸値のフォントスタイル, normal, italic など
        scaleFontStyle : "italic",
        // X, Y 軸値の文字色
        scaleFontColor : "#666",    


        // Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
        scaleBeginAtZero : true,

        // Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines : true,

        // String - Colour of the grid lines
        scaleGridLineColor : "#c0c0c0",

        // Number - Width of the grid lines
        scaleGridLineWidth : 1,

        // Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,

        // Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines: true,

        // Boolean - If there is a stroke on each bar
        barShowStroke : true,

        // Number - Pixel width of the bar stroke
        barStrokeWidth : 2,

        // Number - Spacing between each of the X value sets
        barValueSpacing : 5,

        // Number - Spacing between data sets within X values
        barDatasetSpacing : 1,

         // 表示の時のアニメーション
        animation : true,

        // アニメーションの速度 ( ステップ数 )
        animationSteps : 100,

        // アニメーションの種類, 以下が用意されている
        animationEasing : "easeOutBounce",

        // アニメーション終了後に実行する処理
        onAnimationComplete : null
        
      }

      // 棒グラフを描画する
      var myNewChart1 = new Chart(ctx1).Bar(data1,option1);

  });
      


      // 円グラフを描画する処理
      var ctx2 = $("#chart2").get(0).getContext("2d");

      // 円グラフのデータ
      var data2 = [
            {
                value : 55,
                color : "#4169E1",
                fillColor : "#4169E1",
                label : "プログラミング"
            },
            {
                value : 15,
                color : "#FF3366",
                fillColor : "#FF3366",
                label : "英語",
            },
            {
                value : 15,
                color : "#339999",
                fillColor : "#339999",
                label : "授業"
            },
            {
                value : 15,
                color : "#FF9933",
                fillColor : "#FF9933",
                label : "情報技術者試験"
            }
        ];

      // 円グラフの設定
      var option2 = {

          // アニメーション有無
          animation : true

      };

      // 円グラフを描画する
      var myNewChart2 = new Chart(ctx2).Pie(data2,option2);
      $("#pieLegend").html(myNewChart2.generateLegend());


      // レーダーチャート描画する処理
      var ctx3 = $("#chart3").get(0).getContext("2d");

      // レーダーチャートのデータ
      var data3 = {
        labels: ["継続性", "勉強のバランス", "天気が良い", "音楽がある", "一人で学習"],
        datasets: [
                  {
                    fillColor : "rgba(255, 0, 51, 0.5)",
                    strokeColor : "rgba(220, 220, 220, 1)",
                    pointColor : "rgba(220, 220, 220, 1)",
                    pointStrokeColor : "#fff",
                    data : [100, 59, 

<%# あるユーザの音楽ありで学習した時間の合計を計算 %>

<%# 天気良い時に学習した時間の合計 %>
<% nice_weather_sum = 0 %>

<%# 天気が悪い時に学習した時間の合計 %>
<% bad_weather_sum = 0 %>

<% nice_weather_hours = dbh.execute("select (strftime('%s', tasks.finish_time) - strftime('%s', tasks.start_time)) / 60 from tasks where user_id = 2 and weather_frag = 1;") %>
<% nice_weather_hours.each do |row| %>

<%   nice_weather_sum = nice_weather_sum + row[0].to_i %>

<% end %>

<% bad_weather_hours = dbh.execute("select (strftime('%s', tasks.finish_time) - strftime('%s', tasks.start_time)) / 60 from tasks where user_id = 2 and weather_frag = 2;") %>
<% bad_weather_hours.each do |row| %>

<%   bad_weather_sum = bad_weather_sum + row[0].to_i %>

<% end %> 

<%# 良い天気の時に勉強した割合を出す %>
<% puts "良い天気の時に勉強した割合を出す"%>
<% puts (nice_weather_sum.to_f / (nice_weather_sum.to_f + bad_weather_sum.to_f)) * 100 %>
<%= (nice_weather_sum.to_f / (nice_weather_sum.to_f + bad_weather_sum.to_f)) * 100 %>,



<%# あるユーザの音楽ありで学習した時間の合計を計算 %>

<%# 音楽あり学習した時間の合計 %>
<% music_sum = 0 %>

<%# 学習した時間の合計 %>
<% music_all_sum = 0 %>

<% music_hours = dbh.execute("select (strftime('%s', tasks.finish_time) - strftime('%s', tasks.start_time)) / 60 from tasks where user_id = 2 and music_frag = 1;") %>
<% music_hours.each do |row| %>

<%   music_sum = music_sum + row[0].to_i %>

<% end %>

<%# あるユーザの今までの学習時間の合計を計算 %>
<% music_all_hours = dbh.execute("select (strftime('%s', tasks.finish_time) - strftime('%s', tasks.start_time)) / 60 from tasks where user_id = 2;") %>
<% music_all_hours.each do |row| %>

<%   music_all_sum = music_all_sum + row[0].to_i %>

<% end %> 

<%# 音楽ありで学習した時間の割合を返す %>
<% puts "音楽あり学習した割合のデバッグ"%>
<% puts music_sum.to_f / music_all_sum.to_f * 100 %>
<%= music_sum.to_f / music_all_sum.to_f * 100 %>,



<%# あるユーザの一人で学習した時間の合計を計算 %>

<%# 一人で学習した時間の合計 %>
<% solo_sum = 0 %>

<%# 学習した時間の合計 %>
<% hours_sum = 0 %>

<% solo_hours = dbh.execute("select (strftime('%s', tasks.finish_time) - strftime('%s', tasks.start_time)) / 60 from tasks where user_id = 2 and group_frag = 0;") %>
<% solo_hours.each do |row| %>

<%   solo_sum = solo_sum + row[0].to_i %>

<% end %>

<%# あるユーザの今までの学習時間の合計を計算 %>
<% all_hours = dbh.execute("select (strftime('%s', tasks.finish_time) - strftime('%s', tasks.start_time)) / 60 from tasks where user_id = 2;") %>
<% all_hours.each do |row| %>

<%   hours_sum = hours_sum + row[0].to_i %>

<% end %> 

<%# 一人で学習した時間の割合を返す %>
<% puts "一人で学習した割合のデバッグ"%>
<% puts solo_sum.to_f / hours_sum.to_f * 100 %>
<%= solo_sum.to_f / hours_sum.to_f * 100 %>
              
                   ] 
                  },
        ]
      };

      // レーダーチャートの設定
      var option3 = {

            // 表示の時のアニメーション
            animation : true,
            // アニメーションの速度 ( ステップ数 )
            animationSteps : 60,

            animationEasing : "easeOutQuad",
            // アニメーション終了後に実行する処理
            // animation: false の時にも実行されるようです
            // e.g. onAnimationComplete : function() {alert('complete');}
            onAnimationComplete : null

      };

      // レーダーチャートを描画する
      var myNewChart3 = new Chart(ctx3).Radar(data3,option3);

  </script>
</body>
</html>

<%# 実行結果を開放する %>
<% sth_name_second.finish %>
<% sth_name_third.finish %>
<% sth_comment.finish %>
<% sth_timeline.finish %>
<% solo_hours.finish %>
<% all_hours.finish %>
<% music_hours.finish %>
<% music_all_hours.finish %>
<% nice_weather_hours.finish %>
<% bad_weather_hours.finish %>

<%# データベースとの接続を終了する %>
<% dbh.disconnect %>
